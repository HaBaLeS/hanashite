syntax = "proto3";

package hanmessage;
option go_package = ".;serialize";

/**
 * Envelope to enable easy parsing of multiple types of messages
 */
message StreamHeader {
  fixed32 magic = 1;
  fixed32 length = 2;
}

message HanMessage {
  bytes message_id = 1;
  oneof msg {
    PubKeyAuth pub_key_auth = 2;
    AuthResponse auth_response = 3;
    Challenge challenge = 4;
    ChallengeResponse challenge_response = 5;
    ChannelSubscription channel_subscription = 6;
    ChannelSubscriptionError channel_subscription_error = 7;
    ChannelSubscriptionEvent channel_subscription_event = 8;
    ChannelSubscriptionEvent channel_unsubscription_event = 9;
  }
}

/*
Login, nothing works before that.
 */
message PubKeyAuth {
  string username = 1;
  bytes public_key = 2;
}

message AuthResponse {
  enum ResultState {
    UNKNOWN = 0;
    SUCCESS = 1;
    BROKEN_KEY = 2;
    INVALID_CREDENTIALS = 3;

  }
  ResultState result = 1;
  uint32 user_id = 2;
  string message = 3;
}

message Challenge {
  bytes chellange = 1;
}

message ChallengeResponse {
  bytes signature = 1;
}

message ChannelSubscription {
  string name = 1;
  bool audio = 2;
}

message ChannelSubscriptionError {
  enum Reason {
    DOES_NOT_EXIST = 0;
    PERMISSION_DENIED = 1;
  }
  Reason reason = 1;
}

message ChannelSubscriptionEvent {
  enum Flag {
    AUDIO_RECEIVE = 0;
    AUDIO_SEND = 1;
    CHAT_SEND = 2;
    MODERATOR = 3;
  }
  uint32 user_id = 1;
  string user_name = 2;
  string channel_name = 3;
  repeated Flag flags = 4;
}

message ChannelUnsubscriptionEvent {
  uint32 user_id = 1;
  string user_name = 2;
  string channel_name = 3;
}