// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: hanmessage.proto

package serialize

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//*
// Envelope to enable easy parsing of multiple types of messages
type StreamHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Magic  uint32 `protobuf:"fixed32,1,opt,name=magic,proto3" json:"magic,omitempty"`
	Length uint32 `protobuf:"fixed32,2,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *StreamHeader) Reset() {
	*x = StreamHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamHeader) ProtoMessage() {}

func (x *StreamHeader) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamHeader.ProtoReflect.Descriptor instead.
func (*StreamHeader) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{0}
}

func (x *StreamHeader) GetMagic() uint32 {
	if x != nil {
		return x.Magic
	}
	return 0
}

func (x *StreamHeader) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type HanMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId []byte `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// Types that are assignable to Msg:
	//	*HanMessage_Auth
	//	*HanMessage_AuthResult
	//	*HanMessage_ChanCrea
	//	*HanMessage_ChanCreaResult
	//	*HanMessage_ChanDel
	//	*HanMessage_ChanDelResult
	//	*HanMessage_ChanLst
	//	*HanMessage_ChanLstResult
	//	*HanMessage_ChanJoin
	//	*HanMessage_ChanJoinResult
	//	*HanMessage_ChanPart
	//	*HanMessage_ChanPartResult
	//	*HanMessage_ChanStatus
	//	*HanMessage_ChanStatusResult
	//	*HanMessage_Status
	//	*HanMessage_StatusResult
	//	*HanMessage_ChanJoinEv
	//	*HanMessage_ChanPartEv
	Msg isHanMessage_Msg `protobuf_oneof:"msg"`
}

func (x *HanMessage) Reset() {
	*x = HanMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HanMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HanMessage) ProtoMessage() {}

func (x *HanMessage) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HanMessage.ProtoReflect.Descriptor instead.
func (*HanMessage) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{1}
}

func (x *HanMessage) GetMessageId() []byte {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (m *HanMessage) GetMsg() isHanMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *HanMessage) GetAuth() *Auth {
	if x, ok := x.GetMsg().(*HanMessage_Auth); ok {
		return x.Auth
	}
	return nil
}

func (x *HanMessage) GetAuthResult() *AuthResult {
	if x, ok := x.GetMsg().(*HanMessage_AuthResult); ok {
		return x.AuthResult
	}
	return nil
}

func (x *HanMessage) GetChanCrea() *ChannelCreate {
	if x, ok := x.GetMsg().(*HanMessage_ChanCrea); ok {
		return x.ChanCrea
	}
	return nil
}

func (x *HanMessage) GetChanCreaResult() *ChannelCreateResult {
	if x, ok := x.GetMsg().(*HanMessage_ChanCreaResult); ok {
		return x.ChanCreaResult
	}
	return nil
}

func (x *HanMessage) GetChanDel() *ChannelDelete {
	if x, ok := x.GetMsg().(*HanMessage_ChanDel); ok {
		return x.ChanDel
	}
	return nil
}

func (x *HanMessage) GetChanDelResult() *ChannelDeleteResult {
	if x, ok := x.GetMsg().(*HanMessage_ChanDelResult); ok {
		return x.ChanDelResult
	}
	return nil
}

func (x *HanMessage) GetChanLst() *ChannelList {
	if x, ok := x.GetMsg().(*HanMessage_ChanLst); ok {
		return x.ChanLst
	}
	return nil
}

func (x *HanMessage) GetChanLstResult() *ChannelListResult {
	if x, ok := x.GetMsg().(*HanMessage_ChanLstResult); ok {
		return x.ChanLstResult
	}
	return nil
}

func (x *HanMessage) GetChanJoin() *ChannelJoin {
	if x, ok := x.GetMsg().(*HanMessage_ChanJoin); ok {
		return x.ChanJoin
	}
	return nil
}

func (x *HanMessage) GetChanJoinResult() *ChannelJoinResult {
	if x, ok := x.GetMsg().(*HanMessage_ChanJoinResult); ok {
		return x.ChanJoinResult
	}
	return nil
}

func (x *HanMessage) GetChanPart() *ChannelPart {
	if x, ok := x.GetMsg().(*HanMessage_ChanPart); ok {
		return x.ChanPart
	}
	return nil
}

func (x *HanMessage) GetChanPartResult() *ChannelPartResult {
	if x, ok := x.GetMsg().(*HanMessage_ChanPartResult); ok {
		return x.ChanPartResult
	}
	return nil
}

func (x *HanMessage) GetChanStatus() *ChannelStatus {
	if x, ok := x.GetMsg().(*HanMessage_ChanStatus); ok {
		return x.ChanStatus
	}
	return nil
}

func (x *HanMessage) GetChanStatusResult() *ChannelStatusResult {
	if x, ok := x.GetMsg().(*HanMessage_ChanStatusResult); ok {
		return x.ChanStatusResult
	}
	return nil
}

func (x *HanMessage) GetStatus() *Status {
	if x, ok := x.GetMsg().(*HanMessage_Status); ok {
		return x.Status
	}
	return nil
}

func (x *HanMessage) GetStatusResult() *StatusResult {
	if x, ok := x.GetMsg().(*HanMessage_StatusResult); ok {
		return x.StatusResult
	}
	return nil
}

func (x *HanMessage) GetChanJoinEv() *ChannelJoinEvent {
	if x, ok := x.GetMsg().(*HanMessage_ChanJoinEv); ok {
		return x.ChanJoinEv
	}
	return nil
}

func (x *HanMessage) GetChanPartEv() *ChannelPartEvent {
	if x, ok := x.GetMsg().(*HanMessage_ChanPartEv); ok {
		return x.ChanPartEv
	}
	return nil
}

type isHanMessage_Msg interface {
	isHanMessage_Msg()
}

type HanMessage_Auth struct {
	Auth *Auth `protobuf:"bytes,2,opt,name=auth,proto3,oneof"`
}

type HanMessage_AuthResult struct {
	AuthResult *AuthResult `protobuf:"bytes,3,opt,name=auth_result,json=authResult,proto3,oneof"`
}

type HanMessage_ChanCrea struct {
	ChanCrea *ChannelCreate `protobuf:"bytes,14,opt,name=chan_crea,json=chanCrea,proto3,oneof"`
}

type HanMessage_ChanCreaResult struct {
	ChanCreaResult *ChannelCreateResult `protobuf:"bytes,15,opt,name=chan_crea_result,json=chanCreaResult,proto3,oneof"`
}

type HanMessage_ChanDel struct {
	ChanDel *ChannelDelete `protobuf:"bytes,16,opt,name=chan_del,json=chanDel,proto3,oneof"`
}

type HanMessage_ChanDelResult struct {
	ChanDelResult *ChannelDeleteResult `protobuf:"bytes,17,opt,name=chan_del_result,json=chanDelResult,proto3,oneof"`
}

type HanMessage_ChanLst struct {
	ChanLst *ChannelList `protobuf:"bytes,4,opt,name=chan_lst,json=chanLst,proto3,oneof"`
}

type HanMessage_ChanLstResult struct {
	ChanLstResult *ChannelListResult `protobuf:"bytes,5,opt,name=chan_lst_result,json=chanLstResult,proto3,oneof"`
}

type HanMessage_ChanJoin struct {
	ChanJoin *ChannelJoin `protobuf:"bytes,6,opt,name=chan_join,json=chanJoin,proto3,oneof"`
}

type HanMessage_ChanJoinResult struct {
	ChanJoinResult *ChannelJoinResult `protobuf:"bytes,7,opt,name=chan_join_result,json=chanJoinResult,proto3,oneof"`
}

type HanMessage_ChanPart struct {
	ChanPart *ChannelPart `protobuf:"bytes,8,opt,name=chan_part,json=chanPart,proto3,oneof"`
}

type HanMessage_ChanPartResult struct {
	ChanPartResult *ChannelPartResult `protobuf:"bytes,9,opt,name=chan_part_result,json=chanPartResult,proto3,oneof"`
}

type HanMessage_ChanStatus struct {
	ChanStatus *ChannelStatus `protobuf:"bytes,10,opt,name=chan_status,json=chanStatus,proto3,oneof"`
}

type HanMessage_ChanStatusResult struct {
	ChanStatusResult *ChannelStatusResult `protobuf:"bytes,11,opt,name=chan_status_result,json=chanStatusResult,proto3,oneof"`
}

type HanMessage_Status struct {
	Status *Status `protobuf:"bytes,12,opt,name=status,proto3,oneof"`
}

type HanMessage_StatusResult struct {
	StatusResult *StatusResult `protobuf:"bytes,13,opt,name=status_result,json=statusResult,proto3,oneof"`
}

type HanMessage_ChanJoinEv struct {
	ChanJoinEv *ChannelJoinEvent `protobuf:"bytes,18,opt,name=chan_join_ev,json=chanJoinEv,proto3,oneof"`
}

type HanMessage_ChanPartEv struct {
	ChanPartEv *ChannelPartEvent `protobuf:"bytes,19,opt,name=chan_part_ev,json=chanPartEv,proto3,oneof"`
}

func (*HanMessage_Auth) isHanMessage_Msg() {}

func (*HanMessage_AuthResult) isHanMessage_Msg() {}

func (*HanMessage_ChanCrea) isHanMessage_Msg() {}

func (*HanMessage_ChanCreaResult) isHanMessage_Msg() {}

func (*HanMessage_ChanDel) isHanMessage_Msg() {}

func (*HanMessage_ChanDelResult) isHanMessage_Msg() {}

func (*HanMessage_ChanLst) isHanMessage_Msg() {}

func (*HanMessage_ChanLstResult) isHanMessage_Msg() {}

func (*HanMessage_ChanJoin) isHanMessage_Msg() {}

func (*HanMessage_ChanJoinResult) isHanMessage_Msg() {}

func (*HanMessage_ChanPart) isHanMessage_Msg() {}

func (*HanMessage_ChanPartResult) isHanMessage_Msg() {}

func (*HanMessage_ChanStatus) isHanMessage_Msg() {}

func (*HanMessage_ChanStatusResult) isHanMessage_Msg() {}

func (*HanMessage_Status) isHanMessage_Msg() {}

func (*HanMessage_StatusResult) isHanMessage_Msg() {}

func (*HanMessage_ChanJoinEv) isHanMessage_Msg() {}

func (*HanMessage_ChanPartEv) isHanMessage_Msg() {}

//
//Login, nothing works before that.
type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{2}
}

func (x *Auth) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type AuthResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ConnectionId []byte `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *AuthResult) Reset() {
	*x = AuthResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResult) ProtoMessage() {}

func (x *AuthResult) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResult.ProtoReflect.Descriptor instead.
func (*AuthResult) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{3}
}

func (x *AuthResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuthResult) GetConnectionId() []byte {
	if x != nil {
		return x.ConnectionId
	}
	return nil
}

//
//List all channels.
type ChannelList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChannelList) Reset() {
	*x = ChannelList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelList) ProtoMessage() {}

func (x *ChannelList) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelList.ProtoReflect.Descriptor instead.
func (*ChannelList) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{4}
}

type ChannelListentry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ChannelId []byte `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *ChannelListentry) Reset() {
	*x = ChannelListentry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelListentry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelListentry) ProtoMessage() {}

func (x *ChannelListentry) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelListentry.ProtoReflect.Descriptor instead.
func (*ChannelListentry) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{5}
}

func (x *ChannelListentry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelListentry) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

type ChannelListResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel []*ChannelListentry `protobuf:"bytes,1,rep,name=channel,proto3" json:"channel,omitempty"`
}

func (x *ChannelListResult) Reset() {
	*x = ChannelListResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelListResult) ProtoMessage() {}

func (x *ChannelListResult) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelListResult.ProtoReflect.Descriptor instead.
func (*ChannelListResult) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{6}
}

func (x *ChannelListResult) GetChannel() []*ChannelListentry {
	if x != nil {
		return x.Channel
	}
	return nil
}

//
//Create a Channel.
type ChannelCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ChannelCreate) Reset() {
	*x = ChannelCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelCreate) ProtoMessage() {}

func (x *ChannelCreate) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelCreate.ProtoReflect.Descriptor instead.
func (*ChannelCreate) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{7}
}

func (x *ChannelCreate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ChannelCreateResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ChannelId []byte `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *ChannelCreateResult) Reset() {
	*x = ChannelCreateResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelCreateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelCreateResult) ProtoMessage() {}

func (x *ChannelCreateResult) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelCreateResult.ProtoReflect.Descriptor instead.
func (*ChannelCreateResult) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{8}
}

func (x *ChannelCreateResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ChannelCreateResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelCreateResult) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

//
//Delete a channel.
type ChannelDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ChannelDelete) Reset() {
	*x = ChannelDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelDelete) ProtoMessage() {}

func (x *ChannelDelete) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelDelete.ProtoReflect.Descriptor instead.
func (*ChannelDelete) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{9}
}

func (x *ChannelDelete) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ChannelDeleteResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ChannelId []byte `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *ChannelDeleteResult) Reset() {
	*x = ChannelDeleteResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelDeleteResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelDeleteResult) ProtoMessage() {}

func (x *ChannelDeleteResult) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelDeleteResult.ProtoReflect.Descriptor instead.
func (*ChannelDeleteResult) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{10}
}

func (x *ChannelDeleteResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ChannelDeleteResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelDeleteResult) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

//
//Join a channel. Automatically leaves current channel.
type ChannelJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ChannelJoin) Reset() {
	*x = ChannelJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelJoin) ProtoMessage() {}

func (x *ChannelJoin) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelJoin.ProtoReflect.Descriptor instead.
func (*ChannelJoin) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{11}
}

func (x *ChannelJoin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ChannelJoinResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ChannelId []byte `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *ChannelJoinResult) Reset() {
	*x = ChannelJoinResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelJoinResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelJoinResult) ProtoMessage() {}

func (x *ChannelJoinResult) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelJoinResult.ProtoReflect.Descriptor instead.
func (*ChannelJoinResult) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{12}
}

func (x *ChannelJoinResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ChannelJoinResult) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

//
//Leave current channel.
type ChannelPart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChannelPart) Reset() {
	*x = ChannelPart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelPart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelPart) ProtoMessage() {}

func (x *ChannelPart) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelPart.ProtoReflect.Descriptor instead.
func (*ChannelPart) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{13}
}

type ChannelPartResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ChannelId []byte `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *ChannelPartResult) Reset() {
	*x = ChannelPartResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelPartResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelPartResult) ProtoMessage() {}

func (x *ChannelPartResult) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelPartResult.ProtoReflect.Descriptor instead.
func (*ChannelPartResult) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{14}
}

func (x *ChannelPartResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ChannelPartResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelPartResult) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

//
//List stats for a channel.
type ChannelStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ChannelStatus) Reset() {
	*x = ChannelStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelStatus) ProtoMessage() {}

func (x *ChannelStatus) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelStatus.ProtoReflect.Descriptor instead.
func (*ChannelStatus) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{15}
}

func (x *ChannelStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UserEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserId []byte `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UserEntry) Reset() {
	*x = UserEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEntry) ProtoMessage() {}

func (x *UserEntry) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEntry.ProtoReflect.Descriptor instead.
func (*UserEntry) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{16}
}

func (x *UserEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserEntry) GetUserId() []byte {
	if x != nil {
		return x.UserId
	}
	return nil
}

type ChannelStatusResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ChannelId []byte       `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	User      []*UserEntry `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
}

func (x *ChannelStatusResult) Reset() {
	*x = ChannelStatusResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelStatusResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelStatusResult) ProtoMessage() {}

func (x *ChannelStatusResult) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelStatusResult.ProtoReflect.Descriptor instead.
func (*ChannelStatusResult) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{17}
}

func (x *ChannelStatusResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChannelStatusResult) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *ChannelStatusResult) GetUser() []*UserEntry {
	if x != nil {
		return x.User
	}
	return nil
}

//
//List your own status.
type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{18}
}

type StatusResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId []byte `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Channel      string `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *StatusResult) Reset() {
	*x = StatusResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResult) ProtoMessage() {}

func (x *StatusResult) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResult.ProtoReflect.Descriptor instead.
func (*StatusResult) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{19}
}

func (x *StatusResult) GetConnectionId() []byte {
	if x != nil {
		return x.ConnectionId
	}
	return nil
}

func (x *StatusResult) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *StatusResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

//
//NOT YET WORKING. You should get this if someone joins your current channel.
type ChannelJoinEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	ChannelId   []byte `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserName    string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserId      string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ChannelJoinEvent) Reset() {
	*x = ChannelJoinEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelJoinEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelJoinEvent) ProtoMessage() {}

func (x *ChannelJoinEvent) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelJoinEvent.ProtoReflect.Descriptor instead.
func (*ChannelJoinEvent) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{20}
}

func (x *ChannelJoinEvent) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *ChannelJoinEvent) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *ChannelJoinEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ChannelJoinEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

//*
//Not YET WORKING. You should get this if someone leaves your channel.
type ChannelPartEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelName string `protobuf:"bytes,1,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	ChannelId   []byte `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserName    string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserId      string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Reason      string `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *ChannelPartEvent) Reset() {
	*x = ChannelPartEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hanmessage_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelPartEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelPartEvent) ProtoMessage() {}

func (x *ChannelPartEvent) ProtoReflect() protoreflect.Message {
	mi := &file_hanmessage_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelPartEvent.ProtoReflect.Descriptor instead.
func (*ChannelPartEvent) Descriptor() ([]byte, []int) {
	return file_hanmessage_proto_rawDescGZIP(), []int{21}
}

func (x *ChannelPartEvent) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *ChannelPartEvent) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *ChannelPartEvent) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ChannelPartEvent) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChannelPartEvent) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_hanmessage_proto protoreflect.FileDescriptor

var file_hanmessage_proto_rawDesc = []byte{
	0x0a, 0x10, 0x68, 0x61, 0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x68, 0x61, 0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3c,
	0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x05, 0x6d,
	0x61, 0x67, 0x69, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x07, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0xa6, 0x09, 0x0a,
	0x0a, 0x48, 0x61, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x61, 0x6e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x61, 0x6e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48,
	0x00, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x68, 0x61, 0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x08, 0x63,
	0x68, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x12, 0x4b, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x6c,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x61, 0x6e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x12, 0x49, 0x0a, 0x0f,
	0x63, 0x68, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x44, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x5f,
	0x6c, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x61, 0x6e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x4c, 0x73, 0x74, 0x12, 0x47, 0x0a,
	0x0f, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x6c, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x6e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x4c, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x6a,
	0x6f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x61, 0x6e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4a, 0x6f,
	0x69, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x49,
	0x0a, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61, 0x6e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68,
	0x61, 0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x50, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x12, 0x49, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x68, 0x61,
	0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x68,
	0x61, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3c, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x68, 0x61, 0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4f, 0x0a, 0x12, 0x63, 0x68,
	0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x6e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x61,
	0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x68, 0x61, 0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x63, 0x68,
	0x61, 0x6e, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x65, 0x76, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x68, 0x61, 0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x45, 0x76, 0x12, 0x40, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x65, 0x76, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x45, 0x76, 0x42, 0x05,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x22, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x0a, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x11,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x36, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x61, 0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x23, 0x0a, 0x0d, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x62,
	0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x22, 0x23, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x0b, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4c,
	0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x0d, 0x0a, 0x0b,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x22, 0x60, 0x0a, 0x11, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x23, 0x0a,
	0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x38, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x13,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68, 0x61, 0x6e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x08, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x61, 0x0a, 0x0c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8a,
	0x01, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4a, 0x6f, 0x69, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x10,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hanmessage_proto_rawDescOnce sync.Once
	file_hanmessage_proto_rawDescData = file_hanmessage_proto_rawDesc
)

func file_hanmessage_proto_rawDescGZIP() []byte {
	file_hanmessage_proto_rawDescOnce.Do(func() {
		file_hanmessage_proto_rawDescData = protoimpl.X.CompressGZIP(file_hanmessage_proto_rawDescData)
	})
	return file_hanmessage_proto_rawDescData
}

var file_hanmessage_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_hanmessage_proto_goTypes = []interface{}{
	(*StreamHeader)(nil),        // 0: hanmessage.StreamHeader
	(*HanMessage)(nil),          // 1: hanmessage.HanMessage
	(*Auth)(nil),                // 2: hanmessage.Auth
	(*AuthResult)(nil),          // 3: hanmessage.AuthResult
	(*ChannelList)(nil),         // 4: hanmessage.ChannelList
	(*ChannelListentry)(nil),    // 5: hanmessage.ChannelListentry
	(*ChannelListResult)(nil),   // 6: hanmessage.ChannelListResult
	(*ChannelCreate)(nil),       // 7: hanmessage.ChannelCreate
	(*ChannelCreateResult)(nil), // 8: hanmessage.ChannelCreateResult
	(*ChannelDelete)(nil),       // 9: hanmessage.ChannelDelete
	(*ChannelDeleteResult)(nil), // 10: hanmessage.ChannelDeleteResult
	(*ChannelJoin)(nil),         // 11: hanmessage.ChannelJoin
	(*ChannelJoinResult)(nil),   // 12: hanmessage.ChannelJoinResult
	(*ChannelPart)(nil),         // 13: hanmessage.ChannelPart
	(*ChannelPartResult)(nil),   // 14: hanmessage.ChannelPartResult
	(*ChannelStatus)(nil),       // 15: hanmessage.ChannelStatus
	(*UserEntry)(nil),           // 16: hanmessage.UserEntry
	(*ChannelStatusResult)(nil), // 17: hanmessage.ChannelStatusResult
	(*Status)(nil),              // 18: hanmessage.Status
	(*StatusResult)(nil),        // 19: hanmessage.StatusResult
	(*ChannelJoinEvent)(nil),    // 20: hanmessage.ChannelJoinEvent
	(*ChannelPartEvent)(nil),    // 21: hanmessage.ChannelPartEvent
}
var file_hanmessage_proto_depIdxs = []int32{
	2,  // 0: hanmessage.HanMessage.auth:type_name -> hanmessage.Auth
	3,  // 1: hanmessage.HanMessage.auth_result:type_name -> hanmessage.AuthResult
	7,  // 2: hanmessage.HanMessage.chan_crea:type_name -> hanmessage.ChannelCreate
	8,  // 3: hanmessage.HanMessage.chan_crea_result:type_name -> hanmessage.ChannelCreateResult
	9,  // 4: hanmessage.HanMessage.chan_del:type_name -> hanmessage.ChannelDelete
	10, // 5: hanmessage.HanMessage.chan_del_result:type_name -> hanmessage.ChannelDeleteResult
	4,  // 6: hanmessage.HanMessage.chan_lst:type_name -> hanmessage.ChannelList
	6,  // 7: hanmessage.HanMessage.chan_lst_result:type_name -> hanmessage.ChannelListResult
	11, // 8: hanmessage.HanMessage.chan_join:type_name -> hanmessage.ChannelJoin
	12, // 9: hanmessage.HanMessage.chan_join_result:type_name -> hanmessage.ChannelJoinResult
	13, // 10: hanmessage.HanMessage.chan_part:type_name -> hanmessage.ChannelPart
	14, // 11: hanmessage.HanMessage.chan_part_result:type_name -> hanmessage.ChannelPartResult
	15, // 12: hanmessage.HanMessage.chan_status:type_name -> hanmessage.ChannelStatus
	17, // 13: hanmessage.HanMessage.chan_status_result:type_name -> hanmessage.ChannelStatusResult
	18, // 14: hanmessage.HanMessage.status:type_name -> hanmessage.Status
	19, // 15: hanmessage.HanMessage.status_result:type_name -> hanmessage.StatusResult
	20, // 16: hanmessage.HanMessage.chan_join_ev:type_name -> hanmessage.ChannelJoinEvent
	21, // 17: hanmessage.HanMessage.chan_part_ev:type_name -> hanmessage.ChannelPartEvent
	5,  // 18: hanmessage.ChannelListResult.channel:type_name -> hanmessage.ChannelListentry
	16, // 19: hanmessage.ChannelStatusResult.user:type_name -> hanmessage.UserEntry
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_hanmessage_proto_init() }
func file_hanmessage_proto_init() {
	if File_hanmessage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hanmessage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HanMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelListentry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelListResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelCreateResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelDeleteResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelJoinResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelPart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelPartResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelStatusResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelJoinEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hanmessage_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelPartEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_hanmessage_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*HanMessage_Auth)(nil),
		(*HanMessage_AuthResult)(nil),
		(*HanMessage_ChanCrea)(nil),
		(*HanMessage_ChanCreaResult)(nil),
		(*HanMessage_ChanDel)(nil),
		(*HanMessage_ChanDelResult)(nil),
		(*HanMessage_ChanLst)(nil),
		(*HanMessage_ChanLstResult)(nil),
		(*HanMessage_ChanJoin)(nil),
		(*HanMessage_ChanJoinResult)(nil),
		(*HanMessage_ChanPart)(nil),
		(*HanMessage_ChanPartResult)(nil),
		(*HanMessage_ChanStatus)(nil),
		(*HanMessage_ChanStatusResult)(nil),
		(*HanMessage_Status)(nil),
		(*HanMessage_StatusResult)(nil),
		(*HanMessage_ChanJoinEv)(nil),
		(*HanMessage_ChanPartEv)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hanmessage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hanmessage_proto_goTypes,
		DependencyIndexes: file_hanmessage_proto_depIdxs,
		MessageInfos:      file_hanmessage_proto_msgTypes,
	}.Build()
	File_hanmessage_proto = out.File
	file_hanmessage_proto_rawDesc = nil
	file_hanmessage_proto_goTypes = nil
	file_hanmessage_proto_depIdxs = nil
}
